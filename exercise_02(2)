import os
import time
import matplotlib.pyplot as plt
import numpy as np




 # imagine data
def frame1() :
    os.system('cls')

a=np.array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,1,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,
            0,0,0,0,1,0,1,1,1,1,1,0,0,0,0,0,0,
            1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,0,0,
            0,1,0,0,1,0,1,1,1,1,1,1,0,0,0,0,0,
            0,1,0,0,1,0,0,1,1,0,1,0,0,0,0,0,0,
            0,0,0,0,1,0,0,1,1,0,1,0,0,0,0,0,0,
            0,1,0,1,1,1,0,0,0,1,1,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]).reshape(9,17)
plt.imshow(a,interpolation='nearest',cmap='bone',origin='upper')
plt.xticks(())
plt.yticks(())
plt.show()

def frame2() :
    os.system('cls')


b=np.array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,1,0,1,1,1,0,0,1,0,0,0,0,0,0,0,
            0,0,0,0,0,1,0,1,1,1,1,1,0,0,0,0,0,
            0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,0,
            0,0,1,0,0,1,0,1,1,1,1,1,1,0,0,0,0,
            0,0,1,0,0,1,0,0,1,1,0,1,0,0,0,0,0,
            0,0,0,0,0,1,0,0,1,1,0,1,0,0,0,0,0,
            0,0,1,0,1,1,1,0,0,0,1,1,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]).reshape(9,17)
plt.imshow(b,interpolation='nearest',cmap='bone',origin='upper')
plt.xticks(())
plt.yticks(())
plt.show()
    
def frame3() :
    os.system('cls')
    
c=np.array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,1,0,1,1,1,0,0,1,0,0,0,0,0,0,
            0,0,0,0,0,0,1,0,1,1,1,1,1,0,0,0,0,
            0,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,
            0,0,0,1,0,0,1,0,1,1,1,1,1,1,0,0,0,
            0,0,0,1,0,0,1,0,0,1,1,0,1,0,0,0,0,
            0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,0,0,
            0,0,0,1,0,1,1,1,0,0,0,1,1,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]).reshape(9,17)
plt.imshow(c,interpolation='nearest',cmap='bone',origin='upper')
plt.xticks(())
plt.yticks(())
plt.show()

    
def frame4() :
    os.system('cls')

d=np.array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,1,0,1,1,1,0,0,1,0,0,0,0,0,
            0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,0,0,
            0,0,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,
            0,0,0,0,1,0,0,1,0,1,1,1,1,1,1,0,0,
            0,0,0,0,1,0,0,1,0,0,1,1,0,1,0,0,0,
            0,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,0,
            0,0,0,0,1,0,1,1,1,0,0,0,1,1,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]).reshape(9,17)
plt.imshow(d,interpolation='nearest',cmap='bone',origin='upper')
plt.xticks(())
plt.yticks(())
plt.show()

    
def frame5() :
    os.system('cls')

e=np.array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,1,0,1,1,1,0,0,1,0,0,0,0,
            0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,0,
            0,0,0,0,1,0,1,0,1,0,0,1,0,1,0,0,0,
            0,0,0,0,0,1,0,0,1,0,1,1,1,1,1,1,0,
            0,0,0,0,0,1,0,0,1,0,0,1,1,0,1,0,0,
            0,0,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,
            0,0,0,0,0,1,0,1,1,1,0,0,0,1,1,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]).reshape(9,17)
plt.imshow(e,interpolation='nearest',cmap='bone',origin='upper')
plt.xticks(())
plt.yticks(())
plt.show()

x=1

while 1:          
    frame1()
    time.sleep(0.1)
while 2:          
    frame2()
    time.sleep(0.1)
while 3:          
    frame3()
    time.sleep(0.1)
while 4:          
    frame4()
    time.sleep(0.1)
while 5:          
    frame5()
    time.sleep(0.1)
    
if x<6 :
      break
         # 循环条件为1必定成立
   
